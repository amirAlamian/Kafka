version: "3.7"

services:  
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - test
  kafka1:
    container_name: kafka1
    image: wurstmeister/kafka
    restart: always
    depends_on: ["zookeeper"]
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka-data:/var/lib/kafka/data
    networks:
      - test
  kafka2:
    container_name: kafka2
    image: wurstmeister/kafka
    restart: always
    depends_on: ["zookeeper"]
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka-data:/var/lib/kafka/data
    networks:
      - test
  kafka3:
    container_name: kafka3
    image: wurstmeister/kafka
    restart: always
    depends_on: ["zookeeper"]
    ports:
      - "9095:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9095
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9095
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false' 
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka-data:/var/lib/kafka/data
    networks:
      - test
  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9001:9000"
    depends_on: ["kafka1", "zookeeper"]
    environment:
      KAFKA_BROKERCONNECT: kafka1:9092
    networks:
      - test
  node: 
    container_name: node
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./node:/app
    command: [
        "sh",
        "-c",
        "ls
        && npm install && npm start"
      ]
    networks:
      - test


volumes:
  kafka-data:

networks:
  test:
    external: true
